version: '3'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_ALLOW_ORIGIN=*

  whatsapp-service:
    build:
      context: .
      dockerfile: ./apps/whatsapp-service/Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./apps/whatsapp-service/.env
    depends_on:
      - redis
      - products-agent
    restart: unless-stopped

  products-agent:
    build:
      context: .
      dockerfile: ./apps/products-agent/Dockerfile
    ports:
      - "3002:3002"
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
    env_file:
      - ./apps/products-agent/.env
    environment:
      - NODE_ENV=production
    volumes:
      - products_agent_logs:/app/apps/products-agent/logs
    depends_on:
      - redis
      - qdrant
    restart: unless-stopped
    # PM2 handles its own clustering
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  qdrant_data:
    driver: local
  redis_data:
    driver: local
  products_agent_logs:
    driver: local
